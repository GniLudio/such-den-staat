/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Liste verfügbarer Autobahnen
         * @description Gibt eine Liste der verfügbaren Autobahnen zurück.
         */
        get: operations["list-autobahnen"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{roadId}/services/roadworks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Liste aktueller Baustellen
         * @description Gibt eine Liste der aktuellen Baustellen zu einer Autobahn zurück.
         */
        get: operations["list-roadworks"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/details/roadworks/{roadworkId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Details einer Baustelle
         * @description Gibt Details zu einer konkreten Baustelle zurück.
         */
        get: operations["get-roadwork"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{roadId}/services/webcam": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Liste verfügbarer Webcams
         * @description Gibt eine Liste der Webcams zu einer Autobahn zurück.
         */
        get: operations["list-webcams"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/details/webcam/{webcamId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Details einer Webcam
         * @description Gibt Details einer konkreten Webcam zurück.
         */
        get: operations["get-webcam"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{roadId}/services/parking_lorry": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Liste verfügbarer Rastplätze
         * @description Gibt eine Liste der Rastplätze zu einer Autobahn zurück.
         */
        get: operations["list-parking-lorries"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/details/parking_lorry/{lorryId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Details eines Rastplatzes
         * @description Gibt Details eines konkreten Rastplatzes zurück.
         */
        get: operations["get-parking-lorry"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{roadId}/services/warning": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Liste aktueller Verkehrsmeldungen
         * @description Gibt eine Liste der Verkehrsmeldungen zu einer Autobahn zurück.
         */
        get: operations["list-warnings"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/details/warning/{warningId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Details zu einer Verkehrsmeldung
         * @description Gibt Details zu einer konkreten Verkehrsmeldung zurück.
         */
        get: operations["get-warning"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{roadId}/services/closure": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Liste aktueller Sperrungen
         * @description Gibt eine Liste der Sperrungen zu einer Autobahn zurück.
         */
        get: operations["list-closures"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/details/closure/{closureId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Details zu einer Sperrung
         * @description Gibt Details zu einer konkreten Sperrung zurück.
         */
        get: operations["get-closure"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{roadId}/services/electric_charging_station": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Liste aktueller Ladestationen
         * @description Gibt eine Liste der Ladestationen zu einer Autobahn zurück.
         */
        get: operations["list-charging-stations"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/details/electric_charging_station/{stationId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Details zu einer Ladestation
         * @description Gibt Details zu einer konkreten Ladestation zurück.
         */
        get: operations["get-charging-station"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
};
export type webhooks = Record<string, never>;
export type components = {
    schemas: {
        Roads: {
            roads?: components["schemas"]["RoadId"][];
        };
        /**
         * @description Kann jede gültige Straßenbezeichnung sein (nicht auf Autobahnen beschränkt). Die Gültigkeit wird nicht überprüft: Abfragen mit nicht existierenden Straßenbezeichnungen liefern einen leeren Datensatz zurück. Die Schreibweise kann von der sonst üblichen Form abweichen (z.B. S1234 statt St1234 für Staatsstraßen).
         *
         * @example A1
         */
        RoadId: string;
        /**
         * @description Rechteck (in WGS84-Koordinaten), das den betroffenen Streckenabschnitt umschließt.
         * @example 10.728384054665147,54.00605746113356,10.775848767524598,54.09436740278899
         */
        Extent: string;
        /**
         * @description Beginn des betroffenen Streckenabschnitts (Längengrad und Breitengrad in WGS84). Identisch zu Coordinate, jedoch sind rundungsbedingte Abweichungen möglich.
         * @example 10.729057,54.006057
         */
        Point: string;
        /**
         * @description Beginn des betroffenen Streckenabschnitts (Koordinaten in WGS84). Identisch zu Point, jedoch sind rundungsbedingte Abweichungen möglich.
         * @example {
         *       "lat": "54.006057",
         *       "long": "10.729057"
         *     }
         */
        Coordinate: {
            lat?: components["schemas"]["LatLongValue"];
            long?: components["schemas"]["LatLongValue"];
        };
        LatLongValue: string;
        /** Format: byte */
        Identifier: string;
        /** @example [
         *       "Beginn: 29.06.2021 09:00",
         *       "Ende: 28.11.2021 17:00",
         *       "",
         *       "Art der Maßnahme:Asphaltdeckenerneuerung",
         *       "Einschränkungen:Es steht nur 1 Fahrstreifen zur Verfügung.\n\nVollsperrung der AS Eutin Ostseite vom 17.07.2021 - 15.09.2021.\n\nVollsperrung der AS Scharbeutz Ostseite vom 16.09.2021 - 17.11.2021.",
         *       "Maximale Durchfahrsbreite: 3.25\n"
         *     ] */
        MultilineText: string[];
        /** @description Sinnbild, das die Art des Eintrags beschreibt. Größtenteils sind diese dem offiziellen Verkehrszeichenkatalog entnommen, teilweise allerdings mit abweichender Bedeutung und/oder nicht offiziellen Unternummern. Wo kein passendes Verkehrszeichen existiert, werden nicht-numerische Werte verwendet:
         *     <ul>
         *     <li>101: Gefahr</li>
         *     <li>123: Bauarbeiten</li>
         *     <li>250: Sperrung</li>
         *     <li>262-2: Max. 3,5t</li>
         *     <li>314-50: Park-/Rastplatz (Pkw/Lkw)</li>
         *     <li>314-50-2: Park-/Rastplatz (nur Pkw)</li>
         *     <li>448: Anschlussstelle gesperrt</li>
         *     <li>charging_plug_strong: Schnellladestation für E-Fahrzeuge</li>
         *     <li>warnkegel: Kurzzeitbaustelle</li>
         *     </ul>
         *      */
        IconRef: string;
        /** @enum {string} */
        DisplayType: "ROADWORKS" | "WEBCAM" | "PARKING" | "WARNING" | "WEIGHT_LIMIT_35" | "CLOSURE" | "CLOSURE_ENTRY_EXIT" | "STRONG_ELECTRIC_CHARGING_STATION" | "SHORT_TERM_ROADWORKS" | "ELECTRIC_CHARGING_STATION";
        /** @example {
         *       "icon": "almofont almo-picnic_facility",
         *       "description": "Picknickmöglichkeiten",
         *       "style": ""
         *     } */
        LorryParkingFeatureIcon: {
            icon?: string;
            description?: string;
            style?: string;
        };
        RoadItem: {
            extent?: components["schemas"]["Extent"];
            identifier?: components["schemas"]["Identifier"];
            routeRecommendation?: Record<string, never>[];
            coordinate?: components["schemas"]["Coordinate"];
            footer?: components["schemas"]["MultilineText"];
            icon?: components["schemas"]["IconRef"];
            isBlocked?: string;
            description?: components["schemas"]["MultilineText"];
            title?: string;
            point?: components["schemas"]["Point"];
            display_type?: components["schemas"]["DisplayType"];
            lorryParkingFeatureIcons?: components["schemas"]["LorryParkingFeatureIcon"][];
            future?: boolean;
            subtitle?: string;
        };
        RoadEvent: components["schemas"]["RoadItem"] & {
            /** Format: date-time */
            startTimestamp?: string;
        };
        Roadworks: {
            roadworks?: components["schemas"]["Roadwork"][];
        };
        /** @example {
         *       "extent": "10.728384054665147,54.00605746113356,10.775848767524598,54.09436740278899",
         *       "identifier": "Uk9BRFdPUktTX19tZG0uc2hfXzYzMTU=",
         *       "routeRecommendation": [],
         *       "coordinate": {
         *         "lat": "54.006057",
         *         "long": "10.729057"
         *       },
         *       "footer": [],
         *       "icon": "123",
         *       "isBlocked": "false",
         *       "description": [
         *         "Beginn: 29.06.2021 09:00",
         *         "Ende: 28.11.2021 17:00",
         *         "",
         *         "Art der Maßnahme:Asphaltdeckenerneuerung",
         *         "Einschränkungen:Es steht nur 1 Fahrstreifen zur Verfügung.\n\nVollsperrung der AS Eutin Ostseite vom 17.07.2021 - 15.09.2021.\n\nVollsperrung der AS Scharbeutz Ostseite vom 16.09.2021 - 17.11.2021.",
         *         "Maximale Durchfahrsbreite: 3.25\n"
         *       ],
         *       "title": "A1 | AS Pansdorf (17) - AS Neustadt-Mitte (14)",
         *       "point": "10.729057,54.006057",
         *       "display_type": "ROADWORKS",
         *       "lorryParkingFeatureIcons": [],
         *       "future": false,
         *       "subtitle": "Lübeck Richtung Fehmarn",
         *       "startTimestamp": "2021-06-29T09:00:00.000+0200"
         *     } */
        Roadwork: components["schemas"]["RoadEvent"];
        Webcams: {
            webcam?: components["schemas"]["Webcam"][];
        };
        /** @example {
         *       "extent": "6.861151,50.987423,6.861151,50.987423",
         *       "identifier": "V0VCQ0FNX19OUldfU2lsYS1TaWduYWxiYXVfMTAxMDgxMDk4ODE2NDgyOTQ4NTQ=",
         *       "routeRecommendation": [],
         *       "coordinate": {
         *         "lat": "50.987423",
         *         "long": "6.861151"
         *       },
         *       "footer": [
         *         "ID: WEBCAM__NRW_Sila-Signalbau_10108109881648294854"
         *       ],
         *       "icon": "webcam",
         *       "isBlocked": "false",
         *       "description": [],
         *       "title": "A1 | ID005 AK Köln-Nord",
         *       "operator": "NRW",
         *       "point": "6.861151,50.987423",
         *       "display_type": "WEBCAM",
         *       "lorryParkingFeatureIcons": [],
         *       "future": false,
         *       "imageurl": "https://www.verkehr.nrw/webcams/10108109881648294854.jpg",
         *       "subtitle": "Blickrichtung Dortmund",
         *       "linkurl": "https://www.blitzvideoserver.de/player_strassennrw.html?serverip=62.113.210.7&serverapp=strassennrw-rtplive&streamname=10108109881648294854"
         *     } */
        Webcam: components["schemas"]["RoadItem"] & {
            operator?: string;
            /** Format: uri */
            imageurl?: string;
            /** Format: uri */
            linkurl?: string;
        };
        ParkingLorries: {
            parking_lorry?: components["schemas"]["ParkingLorry"][];
        };
        /** @example {
         *       "extent": "10.979849815368652,54.362571716308594,10.979849815368652,54.362571716308594",
         *       "identifier": "UEFSS0lOR19fbWRtLmxvcnJ5LnBhcmtpbmdfX0RFLVNILTAwMTEwOA==",
         *       "routeRecommendation": [],
         *       "coordinate": {
         *         "lat": "54.362572",
         *         "long": "10.979850"
         *       },
         *       "footer": [],
         *       "icon": "314-50",
         *       "isBlocked": "false",
         *       "description": [
         *         "PKW Stellplätze: 21 ",
         *         "LKW Stellplätze: 20 "
         *       ],
         *       "title": "A 1 | Richtung Puttgarden",
         *       "point": "10.979850,54.362572",
         *       "display_type": "PARKING",
         *       "lorryParkingFeatureIcons": [
         *         {
         *           "icon": "almofont almo-picnic_facility",
         *           "description": "Picknickmöglichkeiten",
         *           "style": ""
         *         },
         *         {
         *           "icon": "almofont almo-restroom",
         *           "description": "Toilette vorhanden",
         *           "style": ""
         *         }
         *       ],
         *       "future": false,
         *       "subtitle": "(Ostseeblick S)"
         *     } */
        ParkingLorry: components["schemas"]["RoadItem"];
        Warnings: {
            warning?: components["schemas"]["Warning"][];
        };
        /** @example {
         *       "extent": "8.61785,52.97344,8.69904,53.00507",
         *       "identifier": "V0FSTklOR19fbWRtLnZpel9fTE1TLU5JL3JfTE1TLU5JLzIxMjI2MF9EICBOSSBMTVMtTkkgIC4w",
         *       "routeRecommendation": [],
         *       "coordinate": {
         *         "lat": "53.005070",
         *         "long": "8.699040"
         *       },
         *       "footer": [],
         *       "icon": "101",
         *       "isBlocked": "false",
         *       "description": [
         *         "Beginn: 25.05.2021 00:00",
         *         "Ende: 30.11.2021 23:59",
         *         "",
         *         "A1 Bremen Richtung Osnabrück",
         *         "zwischen Dreieck Stuhr und Groß Ippener",
         *         "Fahrbahnverengung, geänderte Verkehrsführung, Staugefahr, bis voraussichtlich 30.11.2021",
         *         "Erweiterung PWC Kiekut."
         *       ],
         *       "title": "A1 | AS Delmenhorst-Ost (58b) - AS Groß Ippener (59)",
         *       "point": "8.699040,53.005070",
         *       "display_type": "WARNING",
         *       "lorryParkingFeatureIcons": [],
         *       "future": false,
         *       "subtitle": "Bremen Richtung Osnabrück",
         *       "startTimestamp": "2021-05-25T00:00:00.000+0200"
         *     } */
        Warning: components["schemas"]["RoadEvent"];
        Closures: {
            closure?: components["schemas"]["Closure"][];
        };
        /** @example {
         *       "extent": "6.95325,51.02996,6.96491,51.03644",
         *       "identifier": "Q0xPU1VSRV9fbWRtLnZpel9fTE1TLU5XL3JfTE1TLU5XLzMxNTEyMV9EICBOVyBMTVMtTlcuMA==",
         *       "routeRecommendation": [],
         *       "coordinate": {
         *         "lat": "51.036440",
         *         "long": "6.964910"
         *       },
         *       "footer": [],
         *       "icon": "262-2",
         *       "isBlocked": "false",
         *       "description": [
         *         "Beginn: 20.06.2021 14:19",
         *         "Ende: 31.12.2025 23:59",
         *         "",
         *         "A1 Dortmund - Köln",
         *         "Leverkusener Brücke",
         *         "in beiden Richtungen gesperrt für LKW über 3,5 t, bis 31.12.2025"
         *       ],
         *       "title": "A1 | AK Leverkusen-West (99) - AS Köln-Niehl (100)",
         *       "point": "6.964910,51.036440",
         *       "display_type": "WEIGHT_LIMIT_35",
         *       "lorryParkingFeatureIcons": [],
         *       "future": false,
         *       "subtitle": "Dortmund Richtung Köln",
         *       "startTimestamp": "2021-06-20T14:19:26.000+0200"
         *     } */
        Closure: components["schemas"]["RoadEvent"];
        ElectricChargingStations: {
            electric_charging_station?: components["schemas"]["ElectricChargingStation"][];
        };
        /** @example {
         *       "extent": "9.176298,53.090847,9.176298,53.090847",
         *       "identifier": "RUxFQ1RSSUNfQ0hBUkdJTkdfU1RBVElPTl9fMTI2OTk=",
         *       "routeRecommendation": [],
         *       "coordinate": {
         *         "lat": "53.090847",
         *         "long": "9.176298"
         *       },
         *       "footer": [],
         *       "icon": "charging_plug_strong",
         *       "isBlocked": "false",
         *       "description": [
         *         "A1 | Bremen | Raststätte Grundbergsee Nord",
         *         "27376 Sottrum",
         *         "",
         *         "Ladepunkt 1:",
         *         "AC Kupplung Typ 2",
         *         "43 kW",
         *         "",
         *         "Ladepunkt 2:",
         *         "DC Kupplung Combo, DC CHAdeMO",
         *         "50 kW"
         *       ],
         *       "title": "A1 | Bremen | Raststätte Grundbergsee Nord",
         *       "point": "9.176298,53.090847",
         *       "display_type": "STRONG_ELECTRIC_CHARGING_STATION",
         *       "lorryParkingFeatureIcons": [],
         *       "future": false,
         *       "subtitle": "Schnellladeeinrichtung"
         *     } */
        ElectricChargingStation: components["schemas"]["RoadItem"];
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
};
export type $defs = Record<string, never>;
export interface operations {
    "list-autobahnen": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Roads"];
                };
            };
        };
    };
    "list-roadworks": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roadId: components["schemas"]["RoadId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Roadworks"];
                };
            };
            /** @description Not found. */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "get-roadwork": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roadworkId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Roadwork"];
                };
            };
            /** @description Not found. */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "list-webcams": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roadId: components["schemas"]["RoadId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Webcams"];
                };
            };
            /** @description Not found. */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "get-webcam": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                webcamId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Webcam"];
                };
            };
            /** @description Not found. */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "list-parking-lorries": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roadId: components["schemas"]["RoadId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ParkingLorries"];
                };
            };
            /** @description Not found. */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "get-parking-lorry": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                lorryId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ParkingLorry"];
                };
            };
            /** @description Not found. */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "list-warnings": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roadId: components["schemas"]["RoadId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Warnings"];
                };
            };
            /** @description Not found. */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "get-warning": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                warningId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Warning"];
                };
            };
            /** @description Not found. */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "list-closures": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roadId: components["schemas"]["RoadId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Closures"];
                };
            };
            /** @description Not found. */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "get-closure": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                closureId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Closure"];
                };
            };
            /** @description Not found. */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "list-charging-stations": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roadId: components["schemas"]["RoadId"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ElectricChargingStations"];
                };
            };
            /** @description Not found. */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "get-charging-station": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                stationId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ElectricChargingStation"];
                };
            };
            /** @description Not found. */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
