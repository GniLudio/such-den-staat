/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** API Version */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/html": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/datenschutz": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Datenschutz */
                            TITLE: string;
                            /** @example <section> <h2>Informationen zur Datenverarbeitung durch die Autobahn GmbH des Bundes bei der Nutzung der Autobahn Service App</h2>... */
                            CONTENT: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/impressum": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Impressum */
                            TITLE: string;
                            /** @example <div class="content-block"><h3>Herausgeber</h3><p>Die Autobahn GmbH des Bundes<br>... */
                            CONTENT: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            categories: components["schemas"]["Category"][];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/autobahn": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Liste der Autobahnen */
        get: {
            parameters: {
                query?: {
                    offset?: components["parameters"]["Offset"];
                    limit?: components["parameters"]["Limit"];
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            roads: components["schemas"]["RoadID"][];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/parking": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Anzahl der freien und gesamten Parkplätze pro Stellplatz */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ParkingLot"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/services/{service}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Anzahl der Einträge pro Autobahn */
        get: {
            parameters: {
                query?: {
                    offset?: components["parameters"]["Offset"];
                    limit?: components["parameters"]["Limit"];
                };
                header?: never;
                path: {
                    service: components["parameters"]["Service"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["RoadCounter"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/autobahn/{roadID}/services/warning": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Verkehrsmeldungen */
        get: {
            parameters: {
                query?: {
                    offset?: components["parameters"]["Offset"];
                    limit?: components["parameters"]["Limit"];
                };
                header?: never;
                path: {
                    roadID: components["parameters"]["RoadID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            warning: components["schemas"]["Warning"][];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/autobahn/{roadID}/services/closure": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Sperrungen */
        get: {
            parameters: {
                query?: {
                    offset?: components["parameters"]["Offset"];
                    limit?: components["parameters"]["Limit"];
                };
                header?: never;
                path: {
                    roadID: components["parameters"]["RoadID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            closure: components["schemas"]["Closure"][];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/autobahn/{roadID}/services/roadworks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Baustellen */
        get: {
            parameters: {
                query?: {
                    offset?: components["parameters"]["Offset"];
                    limit?: components["parameters"]["Limit"];
                };
                header?: never;
                path: {
                    roadID: components["parameters"]["RoadID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            roadwork: components["schemas"]["Roadwork"][];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/autobahn/{roadID}/services/webcam": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Webcams
         * @deprecated
         * @description Deaktiviert aufgrund der aktuellen Entwicklungen in Europa.
         */
        get: {
            parameters: {
                query?: {
                    offset?: components["parameters"]["Offset"];
                    limit?: components["parameters"]["Limit"];
                };
                header?: never;
                path: {
                    roadID: components["parameters"]["RoadID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            webcam: components["schemas"]["Webcam"][];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/autobahn/{roadID}/services/parking_lorry": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Rastanlagen */
        get: {
            parameters: {
                query?: {
                    offset?: components["parameters"]["Offset"];
                    limit?: components["parameters"]["Limit"];
                };
                header?: never;
                path: {
                    roadID: components["parameters"]["RoadID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            parking_lorry: components["schemas"]["ParkingLorry"][];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/autobahn/{roadID}/services/electric_charging_station": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** E-Ladestationen */
        get: {
            parameters: {
                query?: {
                    offset?: components["parameters"]["Offset"];
                    limit?: components["parameters"]["Limit"];
                };
                header?: never;
                path: {
                    roadID: components["parameters"]["RoadID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            parking_lorry: components["schemas"]["ElectricChargingStation"][];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/autobahn/details/warning/{warningID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Details einer Verkehrswarnung */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    warningID: components["schemas"]["WarningID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Warning"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/autobahn/details/closure/{closureID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Details einer Sperrung */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    closureID: components["schemas"]["ClosureID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Closure"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/autobahn/details/roadworks/{roadworkID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Details einer Baustelle */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    roadworkID: components["schemas"]["RoadworkID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Roadwork"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/autobahn/details/webcam/{webcamID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Details einer Webcam
         * @deprecated
         * @description Deaktiviert aufgrund der aktuellen Entwicklungen in Europa.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    webcamID: components["schemas"]["WebcamID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Webcam"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/autobahn/details/parking_lorry/{parkingLorryID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Details einer Rastanlage */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    parkingLorryID: components["schemas"]["ParkingLorryID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ParkingLorry"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/autobahn/details/electric_charging_station/{electricChargingStationID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Details einer E-Ladestation */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    electricChargingStationID: components["schemas"]["ElectricChargingStationID"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ElectricChargingStation"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/photon/api": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Suche nach einem Ort */
        get: {
            parameters: {
                query: {
                    /** @example Berlin */
                    q: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GeoJSONFeatureCollection"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/route/car": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Suche nach einer Route */
        get: {
            parameters: {
                query: {
                    /** @example 13.40419,52.50289 */
                    start: string;
                    /** @example 10.02766,53.56734 */
                    target: string;
                    detailed?: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/autobahnOsInformationen": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Alle Einträge
         * @deprecated
         * @description Deprecated auf Grund von Performance
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["RoadItem"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/autobahnOsInformationen/tile/{longitude}/{latitude}/{zoom}.mvt": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Karten-Kachel */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @example 16 */
                    longitude: components["parameters"]["Longitude"];
                    /** @example 11 */
                    latitude: components["parameters"]["Latitude"];
                    /** @example 5 */
                    zoom: components["parameters"]["Zoom"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/vnd.mapbox-vector-tile": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/../tiles/styles/verkehr/{filename}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    filename: "style.json" | "sprite@2x.json" | "sprite@2x.png";
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/../tiles/data/{filename}.json": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    filename: "v3" | "europe" | "lcl_junction";
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/../tiles/data/{filename}/{zoom}/{longitude}/{latitude}.pbf": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    filename: "v3" | "europe" | "lcl_junction";
                    /** @example 16 */
                    longitude: components["parameters"]["Longitude"];
                    /** @example 11 */
                    latitude: components["parameters"]["Latitude"];
                    /** @example 5 */
                    zoom: components["parameters"]["Zoom"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/../web/main/karte/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Funktioniert via Swagger UI nicht. */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/html": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/../web/main/karte/img": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Funktioniert via Swagger UI nicht. */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/html": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/../web/main/karte/img/{filename}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Funktioniert via Swagger UI nicht. */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    filename: components["schemas"]["ImageFilename"];
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/html": string;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
};
export type webhooks = Record<string, never>;
export type components = {
    schemas: {
        RoadCounter: {
            road: components["schemas"]["RoadID"];
            counter: components["schemas"]["IntegerString"];
        };
        /** @example A1 */
        RoadID: string;
        /** @example DE-NW-000330 */
        ParkingLotID: string;
        ParkingLot: {
            id: components["schemas"]["ParkingLotID"];
            street: components["schemas"]["RoadID"];
            hasSvg: boolean;
            capacity: {
                truck: number;
            };
            free: {
                truck: number;
            };
        };
        RoadItem: {
            identifier: string;
            /** @example A1 | Bremen/Brinkum - Stuhr */
            title: string;
            /** @example Arnheim -> Oberhausen */
            subtitle: string;
            description: components["schemas"]["MultiLineText"];
            footer: components["schemas"]["MultiLineText"];
            routeRecommendation: components["schemas"]["MultiLineText"];
            display_type: components["schemas"]["DisplayType"];
            icon: components["schemas"]["Icon"];
            lorryParkingFeatureIcons: components["schemas"]["LorryParkingFeatureIcon"][];
            isBlocked: components["schemas"]["BooleanString"];
            future: boolean;
            coordinate: components["schemas"]["Coordinate"];
            point: components["schemas"]["Point"] | null;
            extent: components["schemas"]["Extend"];
        };
        WarningID: string;
        Warning: {
            identifier: components["schemas"]["WarningID"];
            startLcPosition: components["schemas"]["IntegerString"];
            startTimestamp: components["schemas"]["TimeStamp"];
            geometry: components["schemas"]["GeoJSONLineString"] | null;
            delayTimeValue: components["schemas"]["IntegerString"] | null;
            abnormalTrafficType: components["schemas"]["TrafficType"] | null;
            averageSpeed: components["schemas"]["FloatString"] | null;
        } & components["schemas"]["RoadItem"];
        ClosureID: string;
        Closure: {
            identifier: components["schemas"]["ClosureID"];
            startLcPosition: components["schemas"]["IntegerString"];
            startTimestamp: components["schemas"]["TimeStamp"] | null;
            impact: components["schemas"]["Impact"];
            geometry: components["schemas"]["GeoJSONLineString"] | null;
        } & components["schemas"]["RoadItem"];
        RoadworkID: string;
        Roadwork: {
            identifier: components["schemas"]["RoadworkID"];
            startLcPosition: components["schemas"]["IntegerString"];
            startTimestamp: components["schemas"]["TimeStamp"] | null;
            impact: components["schemas"]["Impact"];
            geometry: components["schemas"]["GeoJSONLineString"] | null;
        } & components["schemas"]["RoadItem"];
        WebcamID: string;
        /** @description Noch nicht dokumentiert */
        Webcam: Record<string, never>;
        /** @example DE-SL-000008 */
        ParkingLorryID: string;
        ParkingLorry: {
            identifier: components["schemas"]["ParkingLorryID"];
            startLcPosition: components["schemas"]["IntegerString"] | null;
        } & components["schemas"]["RoadItem"];
        /** @example RUxFQ1RSSUNfQ0hBUkdJTkdfU1RBVElPTl9fMTA0Njg= */
        ElectricChargingStationID: string;
        ElectricChargingStation: {
            identifier: components["schemas"]["ElectricChargingStationID"];
        } & components["schemas"]["RoadItem"];
        /** @enum {string} */
        Service: "warning" | "closure" | "roadworks" | "webcam" | "parking_lorry" | "electric_charging_station";
        /** @enum {string} */
        Category: "LOS" | "WARNING" | "CLOSURE" | "REROUTING" | "ROADWORKS" | "WEBCAM" | "PARKING" | "PARKING_LORRY" | "STATION" | "FEATURE" | "ELECTRIC_CHARGING_STATION" | "FUEL_STATION";
        /** @enum {string} */
        TrafficType: "QUEUING_TRAFFIC" | "SLOW_TRAFFIC" | "STATIONARY_TRAFFIC";
        /** @enum {string} */
        Icon: "101" | "123" | "250" | "262-2" | "314-50" | "314-50-2" | "448" | "charging_plug" | "charging_plug_strong" | "warnkegel";
        /** @enum {string} */
        DisplayType: "WEBCAM" | "WARNING" | "CLOSURE" | "ROADWORKS" | "SHORT_TERM_ROADWORKS" | "PARKING" | "ELECTRIC_CHARGING_STATION" | "STRONG_ELECTRIC_CHARGING_STATION" | "WEIGHT_LIMIT_35" | "CLOSURE_ENTRY_EXIT" | "CLOSURE_TRUCKS";
        /** @enum {string} */
        Symbol: "BORDER_LEFT" | "BORDER_RIGHT" | "BREAKDOWN_LANE" | "CLOSED" | "SEPARATE" | "SEPARATE_TMP" | "ARROW_DOWN" | "ARROW_DOWN_BLUE" | "ARROW_UP" | "ARROW_UP_BLUE";
        /** @example 47.60,7.60,47.60,7.60 */
        Extend: string;
        /** @example 47.60,7.60 */
        Point: string;
        /** @example 2024-10-09T07:09:40+02:00 */
        TimeStamp: string;
        Coordinate: {
            lat: number;
            long: number;
        };
        GeoJSONLineString: {
            /** @enum {string} */
            type: "LineString";
            coordinates: number[][];
        };
        GeoJSONFeatureCollection: {
            /** @enum {string} */
            type: "FeatureCollection";
            features: components["schemas"]["GeoJSONFeature"][];
        };
        GeoJSONFeature: {
            /** @enum {string} */
            type: "Feature";
            geometry: components["schemas"]["GeoJSONPoint"];
        };
        GeoJSONPoint: {
            /** @enum {string} */
            type: "Point";
            coordinates: number[];
            properties: {
                type: string;
                country: string;
                countrycode: string;
                state: string;
                city: string | null;
                postcode: string | null;
                district: string | null;
                street: string | null;
                housnumber: string | null;
            };
        };
        Impact: {
            /** @example Aachen */
            lower: string | null;
            /** @example Bochum */
            upper: string | null;
            symbols: (components["schemas"]["Symbol"] | null)[];
        };
        LorryParkingFeatureIcon: {
            /** @example almofont almo-picnic_facility */
            icon: string;
            /** @example Picknickmöglichkeiten */
            description: string;
            style: string;
        };
        MultiLineText: string[];
        /** @enum {string} */
        BooleanString: "false" | "true";
        /** @example 1 */
        IntegerString: string;
        /** @example 1.7 */
        FloatString: string;
        /** @enum {string} */
        ImageFilename: "314-50.png" | "314-50.svg" | "361-50.png" | "361-50.svg" | "376.png" | "376.svg" | "377.png" | "377.svg" | "AOS-Schriftzug1.png" | "Hauptpunkt.png" | "Hauptpunkt.svg" | "Hauptpunkt_on.svg" | "Kamera karte.png" | "Kamera karte.svg" | "Kamera_cluster.svg" | "LKW.svg" | "Lkw_P_b.png" | "PWC.png" | "RM.png" | "Stau_karte.png" | "Stau_karte.svg" | "Stau_off.svg" | "Stau_on.svg" | "TK.png" | "TR.png" | "TRM.png" | "Thumbs.db" | "VZ.svg" | "VZ_on.svg" | "Vz_Karte.png" | "Vz_Karte.svg" | "aag_winkel.svg" | "alternativroute.svg" | "anzahl.svg" | "baustelle_cluster.svg" | "baustelle_navi.svg" | "baustelle_navi_on.svg" | "close.svg" | "dWista-off.svg" | "dWista-on.svg" | "dauerbaustellen_Karte.png" | "dauerbaustellen_Karte.svg" | "deWista Karte.png" | "deWista Karte.svg" | "deWista Karte_MitKreis.png" | "deWista Karte_mitKreis.svg" | "deWista_cluster.svg" | "dreieck_baustelle.png" | "dreieck_stau.png" | "hauptroute.svg" | "impact/ARROW_DOWN.png" | "impact/ARROW_UP.png" | "impact/BORDER_LEFT.png" | "impact/BORDER_RIGHT.png" | "impact/BREAKDOWN_LANE.png" | "impact/CLOSED.png" | "impact/SEPARATE.png" | "korridore_off.svg" | "korridore_on.svg" | "logo_autobahn_white.svg" | "los_off.svg" | "los_on.svg" | "s.png" | "slide_in.svg" | "slide_in_right.svg" | "slide_out.svg" | "slide_out_right.svg" | "son.png" | "stau_cluster.png" | "stau_cluster.svg" | "stvo-101-gefahrstelle.png" | "stvo-123-arbeitsstelle.png" | "stvo-123-arbeitsstelle_geplant.png" | "stvo-124-stau.png" | "stvo-250-verbot.png" | "stvo-250-verbot_geplant.png" | "tagesbaustelle karte.svg" | "tagesbaustelle kluster.svg" | "tagesbaustelle_geortet_off.svg" | "v.png" | "verkehrslage_off.svg" | "verkehrslage_on.svg" | "vollsperrung karte.png" | "vollsperrung karte.svg" | "vollsperrung kluster.svg" | "vollsperrung_off.svg" | "vollsperrung_on.svg" | "warnkegel.png" | "warnkegel.svg" | "warnkegel_geplant.png" | "webcam_off.svg" | "webcam_on.svg";
    };
    responses: never;
    parameters: {
        Offset: number;
        Limit: number;
        Order: number;
        Service: components["schemas"]["Service"];
        RoadID: components["schemas"]["RoadID"];
        /** @example 16 */
        Longitude: number;
        /** @example 11 */
        Latitude: number;
        /** @example 5 */
        Zoom: number;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
};
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
